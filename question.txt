mybatis 二级缓存，redis缓存
dubbo框架使用 dubbo zk 调用交互流程

springMVC springboot  springcloud 
基于redis缓存开发

springcloud 包含组件及相关组件提问
fegin了解，其它组件基本不清楚
dubbo不了解
restTemplate熟练使用
aop、filter、redis、mybatis、mysql、mysql索引创建使用、分布式锁等相关提问、http调用
分布式部署、微服务部署相关不了解
接口幂等性设计、mq消息可靠性设计相关提问
spring、springcloud、mybatis等源码、项目使用解答
redis数据类型、锁， mysql索引、分库分表等问题解答
springCloud微服务，技术栈使用、服务熔断、降级、异常提问
redis持久化、多线程、spring源码、bean线程安全、bean事务提问
微服务理解， springCloud、spring问题
mysql索引， 分库分表策略、技术实现
redis、mybatis相关
微服务优缺点， SpringCloud、Kafka等微服务组件，服务治理方案
redis持久化、数据类型、缓存穿透解决方案
Spring bean声明周期、线程安全、事务实现、分布式事务
mysql分表实现、索引类型、B树
spring 的aop和ioc，动态代理等


Eureka和zk的使用、优缺点，AP、CP、 集群问题及解决方案
SpringCloud组件使用， 协议、Dubbo协议
jvm内存分布，GC使用，参数优化， 方法区1.8调整
Spring加载源码解析、事务实现机制
ThreadLocal分析使用，内存泄漏原因及解决方案
java集合，HashMap内部实现，版本变化实现，扩容插入问题
分布式锁介绍及实现方式，分布式事务等

redis缓存更新的方式，数据不一致解决办法？
分别解释一下什么是缓存穿透、缓存击穿以及解决方案？
答：缓存穿透是缓存中没有，数据库中也没有。解决方案将请求key为键放入缓存，设置超时时间。避免暴力攻击。
      缓存击穿是缓存中没有，数据库中有，此时大量请求过来到数据库，库压力激增。解决方案，缓存预热，热点数据不设置过期时间。

redis持久化的方式以及区别？
答：AOF,RDB
      AOF是记录每次的写命令追加到文件尾部，默认每秒钟后台线程刷磁盘，会存在丢失最近1s的数据。文件过大的时候自动最小化命令集合重新文件。(appendonly.aof)
      RDB是数据快照，将某一时刻的数据存储到磁盘。持久化的过程是异步将快照写入临时文件，完成写入后替换原文件。（dump.rdb）

微服务当中数据一致性如何保证？
答： 时效性要求不高的，可以使用基于消息的最终一致性，rocketmq的事务消息，消费者端要保证接口的幂等，rocketmq会有重复消费的问题，rocketmq的消费模式是最少一次，如果消费端消费失败，会重新投递消息到broker。
       时效性要求高的，使用seata框架提供的AT或TCC，TCC会有空回滚，幂等，悬挂等问题。

Dubbo 核心的配置有哪些
答：registry，service，protocol，reference，application

Dubbo有哪几种负载均衡策略，默认是哪种？
答：failover默认方式失败自动切换
       failfast快速失败
       failsafe安全失败
       failback失败后后台线程重试

实际项目中如何实现会话共享，有什么解决方案，以及有什么区别
答：服务节点复制tomcat使用该方案，集中存储redis

JVM内存模型以及垃圾回收过程？简单介绍知道的几种垃圾回收算法？
答：堆，栈，方法区，本地方法区

谈一下HashMap中hash函数是怎么实现的？为什么不直接将key作为哈希值而是与高16位做异或运算？ 
答：算法  (n-1)&(h ^ (h >>> 16)) 
       右移16位，做异或运算，及保留了高16位，用高16位与低16位做异或运算（保留了高16位hashcode的特征，因为int是4字节，及高16位是0）
       直接运算，高16位的hashcode特征就没有了。这样降低了冲突的概率。
缓存如何保持同步？
答：数据双写的时候，先删除缓存记录，让读请求重置缓存中数据。在写操作发生的同时，如果有读请求过来，串行化读写请求，
      将读写请求放入先进先出队列，避免写请求还没提交，读请求获取了脏数据写入了缓存。还可以在优化，例如都是查看上个请求是否是都请求
      进行请求合并。减少逻辑。
      
针对缓存击穿、雪崩、穿透的应对方案
答：雪崩是大量的key同一时间过期了，在设置key过期时尽量离散写。
jvm发生fullGc问题排查

一、自我介绍：历史工作经历、项目经历、团队情况
  二、技术相关：
    1、所在公司目前搭建的技术体系、使用的技术框架？
    2、所在公司整个支付中心的设计？
  3、hashmap的哈希函数是怎么设计的？为什么要这样设计？为什么采用hashcode的高16位和低16位异或能降低hash碰撞？hash函数能不能直接用key的hashcode？
    4、数据【1-9】分组，然后根据输入的数据，获取所在的对应的组？
    5、多线程方式实现1-100的求和，说出设计思想？
    6、数据库分开分表的几种方案，用过哪些分库分表中间件？shardingJdbc和Mycat有什么区别？如何对数据库如何进行垂直拆分或水平拆分的？
    7、分布式事务：常规开源技术方案，评价：熟练
    8、zookeeper是如何保证事务的顺序一致性的？
    9、微服务技术选型：考虑相对全面
    10、JVM垃圾回收过程是怎样的？
    11、redis：
      redis的过期策略都有哪些？LRU代码如何实现？
    如何保证缓存与数据库的双写一致性？
    redis崩溃之后会怎么样？系统该如何应对这种情况？如何处理redis的穿透？
  12、微服务如何拆分？服务边界如何划分？服务是不是拆的越细越好？

一、自我介绍：历史工作经历、项目经历、团队情况
  二、技术相关：
    1、如果以现在的技术发展水平，用户体量去看当时的易宝支付，会暴露什么问题？如何升级改造？
    2、如果是分布式系统如如何保证数据的一致性？
  3、数据【1-9】分组，然后根据输入的数据，获取所在的对应的组？
    4、用过哪些分库分表中间件？现在有一个未分库分表的系统，未来要分库分表，如何设计才可以让系统从未分库分表动态切换到分库分表上？
    5、JVM垃圾回收过程是怎样的？你知道哪几种垃圾收集器，各自的优缺点，重点讲下cms，g1？吞吐量优先和响应优先的垃圾收集器选择？
    6、消息队列相关：
    kafka、rabbitmq、rocketmq都有什么优点和缺点啊?
    如何保证消息队列的高可用啊？
    如何保证消息的顺序性？
    有几百万消息持续积压几小时，说说怎么解决？
    7、redis：
      redis的过期策略都有哪些？LRU代码如何实现？
    如何保证缓存与数据库的双写一致性？
    redis的哨兵原理能介绍一下么？

 1、最近房抵贷系统平台，各租户的数据是如何实现隔离的？
	- 1 物理隔离，根据url，数据参数来路由到不同的db
	- 2 逻辑隔离，根据登陆人的系统参数，过滤不同的数据集
  2、实际项目当中，和第三方直接是如何交互的，数据加密如何实现的？
	webservice 对称，非对称
	http 
    3、hashmap的哈希函数是怎么设计的？为什么要这样设计？为什么采用hashcode的高16位和低16位异或能降低hash碰撞？

    4、数据【1-9】分组，然后根据输入的数据，获取所在的对应的组？
	
    5、多线程方式实现1-100的求和，说出设计思想？
    6、数据库分开分表的几种方案，用过哪些分库分表中间件？shardingJdbc和Mycat有什么区别？
	
  7、现在有一个未分库分表的系统，未来要分库分表，如何设计才可以让系统从未分库分表动态切换到分库分表上？
	
  8、如何保证消息的顺序性？rocketmq是如何实现顺序性的
	
  9、redis相关
    redis的主从复制原理能介绍一下？
    redis如何实现的锁？
    sentx抢锁后，expire前重启维护了，会怎么样？
    如果redis里有1亿个key，其中10万个key是以某个固定的已知的前缀开头的，怎么将它全部找出来？
    如果redis正在给线上提供服务，使用keys指令会有什么问题？
  10、分布式系统如何保证数据的一致性？


李飞
1、CRM系统分析，客户维度分析，数据量处理。
2、微服务理解， springCloud与dubbo比对，dubbo的协议与超时，分布式事务
3、mysql索引类型，存储结构， 表锁，行锁
4、Srping AOP结合事务管理分析，自调用事务场景分析。
5、hashMap版本变化分析，扩容死锁
6.工作流相关了解
7.隐式类型转换与显示类型转换时的编译时异常与运行时异常
8.SpingBean的作用域与线程安全，线程池

1、dubbo与zk的工作原理。
2、dubbo的协议与超时，分布式事务，dubbo透传，dubbo filter
3、mysql索引类型，存储结构， 表锁，行锁
4、Srping AOP结合事务管理分析，自调用事务场景分析。
5、hashMap，查询复杂度，版本变化分析，扩容死锁。
6.JVM内存模型，类加载，类初始化顺序，对象初始化。
7.隐式类型转换与显示类型转换时的编译时异常与运行时异常
8.二叉树的遍历，前序：ABCDEFG,中序DCBAEFG，输出后序
10.RPC调用的阻塞与非阻塞。
11.Mq的选型，项目中的使用场景，延迟消息、事务消息、消息回溯、死信队列、消息积压。
12.String a = "abc"+123;是否异常，创建了几个对象，类型如何转换。
13.SimpleDateFormat是否线程安全，如何做到线程安全。
14.线程池基础，线程池与跑批调度优先级如何实现。
15.TreadLocal分析与使用场景。
16.期望工作内容

1.eureka与zk的对比分析，zk的选举，eureka的服务信息不一致。
2.mysql索引类型，存储结构， 表锁，行锁
3.Srping AOP结合事务管理分析，自调用事务场景分析。
4.hashMap，查询复杂度，版本变化分析，扩容死锁。
5.JVM内存模型，类加载，类初始化顺序，对象初始化。
6.隐式类型转换与显示类型转换时的编译时异常与运行时异常
7.api调用保证原子性
8.String a = "abc"+123;是否异常，创建了几个对象，类型如何转换。
9.线程池基础，线程池与跑批调度优先级如何实现。
10.还款业务流程中，数据一致性如何保证。
11.跑批性能如何优化，幂等性如何保证。
12.还款计划设计，利息，罚息等计算等幂等性如何保证。

1.团队情况，团队角色，负责的项目。
2.架构的理解，技术架构与业务架构，系统的架构如何着手，每个阶段如何进行考量。
3.架构的演变，每个阶段架构设计的分层。
4.网关层的作用以及框架选型，不同的框架的区别。
5.在不同的框架中用到的IO模型，IO模型的了解，AIO,BIO,NIO的对比。
6.机票查询引擎的缓存如何设计，缓存穿透如何规避，雪崩如何规避，机票最近价格如何刷新同步缓存。
7.价格90日区间的刷新，归档如何做。
8.价格日历的设计，分库分表的选型以及如何进行分库分表，几种框架的对比。
9.订单系统的架构设计，数据一致性如何保证。
10.二叉树的遍历，前序：ABCDEFG,中序DCBAEFG，输出后序。
11.JVM内存模型，类加载，类初始化顺序，对象初始化。

云龙
1、使用过哪几种线程池？区别
2、用过的设计模式，举例说明
3、Map类型的变量如何进行深度复制
4、LinkedHashMap和HashMap区别
5、ArrayList和linkedlist区别
6、针对于mysql数据库都做过哪些优化？
7、spring 的aop和ioc，动态代理
8、微服务的服务治理如何来做？
9、微服务间服务鉴权符合实现？
10、微服务当中网关如何设计？限流如何实现？
11、缓存穿透、缓存击穿、缓存雪崩区别和解决方案
12、spring cloud 组件 hystrix

张波
2、系统调优、分布式锁、分布式事务；
3、redis、MQ；
4、数据库索引，回表；
5、多线程；ThreadLocal相关；
6、锁（读写锁）；
7、JVM结构、垃圾回收；
8、Hash结构源码相关。

 一、自我介绍：
    很详细，包括历史工作经历、项目经历、团队情况
  二、职业意向：
    带团队和开发任务都能接受
  三、技术相关：
    1、JVM相关：薄弱
    2、JAVA基础：一般
    3、redis相关：熟练~精通
    4、消息队列：使用经验丰富，但体系与当前公司存在偏差，但问题不大，熟练
    5、数据库相关：使用层面熟练（对于数据库底层相对薄弱）
    6、分布式锁实现方案：能使用开源技术实现，自身未深入研究，评价：一般~熟练
    7、分布式事务：常规开源技术方案，评价：熟练
    8、微服务技术选型：考虑相对全面，精通
    9、其它问题：
      GO语言相关：应用层面，未深入研究；
      https相关：一般
      全局唯一编号生成：未答上来，可能是没想到
    10、业务场景相关：
      多线程下载文件：未答到较好的方案，提及到了通过nio实现，能接受。
      秒杀系统设计方案：评价：优秀
  四、开发团队管理相关：
    1、注重团队中开发人员哪些品质？
    2、如何看待系统重构这件事情？
    3、对于团队中能力一般的同事，是否愿意给予机会让他尝试一些挑战类的工作？
    综合评价：优秀



  架构师面试情况说明：
  一、自我介绍：
     工作经历不错,接触技术面广
  二、职业意向：
    带团队和开发任务都能接受
  三、技术相关：
    1、整体架构能力较弱（问题点设计高可用架构）
    2、MySQL 基础不熟,只会用，考察主从复制，锁，MVCC。
    3、熟练掌握redis使用。
    4、dubbo 使用属于入门级别 ，没有太多实战经验。
    5、消息队列：使用经验丰富，但全系与当前公司存在偏差，但问题不大，熟练
    5、代码分支管理不清晰,软件版本无管理,无思路
    6、持续交付cicd没有接触
    7、多线程并发编程知识不足，考察synchronized锁的升级降级。
    8、线程池有使用经验丰富。
    9、io/nio，netty熟练掌握，有深入的接触。
   10、熟练掌握基于redis锁的分布式事务
   11、redis基础原理性知识足。
   12、现场根据gc日志及图示分析,判断不出问题
   13、数据结构算法知识薄弱，考察了二叉树和程序时间空间优化
   14、微服务技术选型考虑全面，能够考虑技术本身，团队积累，业务现状。
   15、大数据组件只有使用经验，基础原理不知道。
   16、对于云原生的应用，不懂
  四、开发团队管理相关：
    1、代码版本及版本分支管理及上线流程？   差
    2、如何看待两个不一样技术架构共存的问题？  优
    3、团队技术如何提升？  良
    综合评价： 良
整合评价：
  1、职业情况及项目经历：优秀
  2、技术深度：一般 
  3、技术广度： 良好
  4、技术选型：良好
  5、其它：思维方式及技术相关的想法良好
  最终评价：初级架构师级别，技术广度可以，原理性及计算机基础知识储备不足，进来暂时无法解决问题，需要对技术进行学习。









1、HashMap的数据结构是怎样的？什么情况下会触发reHash，会有怎样的调整？
2、HashTable和ConcurrentHashMap为什么不支持Null？
3、策略模式有什么优点？适合用什么场景？组合模式用于解决什么问题？
4、构建一个线程池有哪些参数？
5、CAS的工作原理是怎样的？
6、ThreadLocal是怎样保存数据线程安全的？
7、java垃圾回收是如何判定一个对象是可回收的？新生代和老年代的回收算法是怎样的？
8、Spring不能解决什么场景下的循环依赖？是如何怎样解决循环依赖的问题的？
9、了解dubbo吗？
10、Mysql InnoDB的索引结构是怎样的？什么是回表？
11、Mysql是如何实现主从同步的？InnoDB为什么需要一个binLog和一个redoLog来保证事务？
12、可重复读解决了幻读问题吗？解决了什么场景下的幻读？
13、redis有哪些方式可以解决缓存穿透问题？
14、rabbitMQ？
15、用过哪些java的锁？JVM会怎样进行锁升级？什么是自旋锁？
16、了解AQS吗？ReentrantLock是如何使用AQS对象的高低位的？分别用于存储什么？
17、ReadWriteLock是如何利用AQS的高低位的？分别用于存储什么？
18、了解分布式事务吗？用的哪种事务框架？实现原理是怎样的？
19、数据结构和算法相关问题